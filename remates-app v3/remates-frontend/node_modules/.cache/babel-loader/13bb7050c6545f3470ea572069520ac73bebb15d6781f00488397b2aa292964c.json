{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dale0\\\\OneDrive\\\\Escritorio\\\\Pruebas de SW\\\\PROYECTO\\\\Remate-Online\\\\remates-app v3\\\\remates-frontend\\\\src\\\\pages\\\\cuentas_administrador.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"../assets/cuenta_administrador.css\";\nimport endpoints from \"../api/endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cuentas_administrador() {\n  _s();\n  const [usuarios, setUsuarios] = useState([]);\n  const fetchUsuarios = async () => {\n    try {\n      const response = await fetch(endpoints.usuarios, {\n        method: \"GET\",\n        credentials: \"include\"\n      }); // Asegúrate de usar la URL correcta\n      const data = await response.json();\n      setUsuarios(data);\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error al obtener los usuarios:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUsuarios();\n  }, []);\n\n  //   const CambiarEstadoAdministrador = (usuario) => {\n  //     usuario.administrador? usuario.administrador = false:usuario.administrador = true;\n  //     // Aquí puedes realizar otras acciones, como navegar a una página de detalles\n  //   };\n\n  const CambiarEstadoAdministrador = async usuarioinfo => {\n    // Actualizamos la lista de usuarios cambiando el estado de administrador del usuario seleccionado\n    const nuevosUsuarios = usuarios.map(usuario => {\n      if (usuario._id === usuarioinfo._id) {\n        return {\n          ...usuario,\n          administrador: !usuario.administrador\n        }; // Cambia el estado\n      }\n      return usuario;\n    });\n    setUsuarios(nuevosUsuarios); // Actualizamos el estado con la nueva lista\n\n    try {\n      const response = await fetch(`${endpoints.usuarios}/${usuarioinfo._id}`, {\n        method: \"PUT\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          administrador: !nuevosUsuarios.find(usuario => usuario._id === usuarioinfo._id).administrador // Enviamos el nuevo estado\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al actualizar el usuario\");\n      }\n    } catch (error) {\n      console.error(\"Error al actualizar el usuario en el backend:\", error);\n      // Puedes revertir el cambio si la actualización falla\n      setUsuarios(usuarios); // Revertir al estado anterior si hay un error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Administrador\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: usuarios.length > 0 ? usuarios.map((usuario, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => CambiarEstadoAdministrador(usuario) // Hacemos la fila clickeable\n          ,\n          style: {\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: usuario.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: usuario.administrador ? \"Sí\" : \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, usuario._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"No hay usuarios disponibles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Cuentas_administrador, \"oF4uvU8ybcIlrygaNCN2tFMvdYA=\");\n_c = Cuentas_administrador;\nexport default Cuentas_administrador;\nvar _c;\n$RefreshReg$(_c, \"Cuentas_administrador\");","map":{"version":3,"names":["React","useState","useEffect","Table","endpoints","jsxDEV","_jsxDEV","Cuentas_administrador","_s","usuarios","setUsuarios","fetchUsuarios","response","fetch","method","credentials","data","json","console","log","error","CambiarEstadoAdministrador","usuarioinfo","nuevosUsuarios","map","usuario","_id","administrador","headers","body","JSON","stringify","find","ok","Error","className","children","striped","bordered","hover","fileName","_jsxFileName","lineNumber","columnNumber","length","index","onClick","style","cursor","email","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/dale0/OneDrive/Escritorio/Pruebas de SW/PROYECTO/Remate-Online/remates-app v3/remates-frontend/src/pages/cuentas_administrador.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"../assets/cuenta_administrador.css\";\r\nimport endpoints from \"../api/endpoints\";\r\n\r\nfunction Cuentas_administrador() {\r\n  const [usuarios, setUsuarios] = useState([]);\r\n\r\n  const fetchUsuarios = async () => {\r\n    try {\r\n      const response = await fetch(endpoints.usuarios, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      }); // Asegúrate de usar la URL correcta\r\n      const data = await response.json();\r\n      setUsuarios(data);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener los usuarios:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsuarios();\r\n  }, []);\r\n\r\n  //   const CambiarEstadoAdministrador = (usuario) => {\r\n  //     usuario.administrador? usuario.administrador = false:usuario.administrador = true;\r\n  //     // Aquí puedes realizar otras acciones, como navegar a una página de detalles\r\n  //   };\r\n\r\n  const CambiarEstadoAdministrador = async (usuarioinfo) => {\r\n    // Actualizamos la lista de usuarios cambiando el estado de administrador del usuario seleccionado\r\n    const nuevosUsuarios = usuarios.map((usuario) => {\r\n      if (usuario._id === usuarioinfo._id) {\r\n        return { ...usuario, administrador: !usuario.administrador }; // Cambia el estado\r\n      }\r\n      return usuario;\r\n    });\r\n    setUsuarios(nuevosUsuarios); // Actualizamos el estado con la nueva lista\r\n\r\n    try {\r\n      const response = await fetch(`${endpoints.usuarios}/${usuarioinfo._id}`, {\r\n        method: \"PUT\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          administrador: !nuevosUsuarios.find(\r\n            (usuario) => usuario._id === usuarioinfo._id\r\n          ).administrador, // Enviamos el nuevo estado\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al actualizar el usuario\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al actualizar el usuario en el backend:\", error);\r\n      // Puedes revertir el cambio si la actualización falla\r\n      setUsuarios(usuarios); // Revertir al estado anterior si hay un error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Email</th>\r\n            <th>Administrador</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {usuarios.length > 0 ? (\r\n            usuarios.map((usuario, index) => (\r\n              <tr\r\n                key={usuario._id}\r\n                onClick={() => CambiarEstadoAdministrador(usuario)} // Hacemos la fila clickeable\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <td>{index + 1}</td>\r\n                <td>{usuario.email}</td>\r\n                <td>{usuario.administrador ? \"Sí\" : \"No\"}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"4\">No hay usuarios disponibles</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cuentas_administrador;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}